<h2>ZF2012-04: Potential Proxy Injection Vulnerabilities in Multiple Zend Framework 2 Components</h2>

<p>
    <code>Zend\Session\Validator\RemoteAddr</code> and <code>Zend\View\Helper\ServerUrl</code>
    were found to be improperly parsing HTTP headers for proxy information, which could 
    potentially allow an attacker to spoof a proxied IP or host name.
</p>

<p>
    In <code>Zend\Session\Validator\RemoteAddr</code>, if the client is behind a proxy server, 
    the detection of the proxy URL was incorrect, and could lead to invalid 
    results on subsequent lookups.
</p>

<p>
    In <code>Zend\View\Helper\ServerUrl</code>, if the server lives behind a proxy, the helper
    would always generate a URL based on the proxy host, regardless of whether 
    or not this was desired; additionally, it did not take into account the proxy port
    or protocol, if provided.
</p>

<h3>Action Taken</h3>

<p>
    A new class, <code>Zend\Http\PhpEnvironment\RemoteAddress</code>, was 
    developed to provide reusable code surrounding the detection of a client IP via
    proxy headers, and <code>Zend\Session\Validator\RemoteAddr</code> was refactored
    to consume this class. This code:
</p>

<ul>
    <li>no longer searches against the non-standard <code>Client-Ip</code> header</li>
    <li>allows specifying the specific header to check against for proxy detection</li>
    <li>allows specifying a list of trusted proxy servers against which to mask any detected proxy IPs</li>
    <li>properly selects the right-most IP address from the list of proxy IPs</li>
</ul>

<p>
    The <code>ServerUrl</code> view helper was modified as follows:
</p>

<ul>
    <li>a flag was introduced to enable/disable proxy detection</li>
    <li>proxy detection is disabled by default</li>
    <li>in addition to using the <code>X-Forwarded-Host</li> header, support for detecting
    the proxy port (via the <code>X-Forwarded-Port</code> header) and proxy protocol (via the 
    <code>X-Forwarded-Proto</code> header) was added.
</ul>

<p>
    This patch has been applied starting in versions 2.0.5 of Zend Framework, as well
    as to the 2.1 development branch.
</p>

<h3>Recommendations</h3>

<p>
    If you are using any of the components listed, we recommend 
    upgrading to 2.0.5 or greater.
</p>

<h2>Other Information</h2>
<h3>Acknowledgments</h3>

<p>
    The Zend Framework team thanks the following for identifying the issues and 
    working with us to help protect its users:
</p>

<ul class="ul">
    <li>Fabien Potencier</li>
</ul>

<?php echo $this->render('security/policy'); ?>
